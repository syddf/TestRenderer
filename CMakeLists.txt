CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(OfflineRenderer)

if(WIN32)
    add_subdirectory(AssetImporter)
endif()

# project variables
MESSAGE(STATUS "platform: ${CMAKE_SYSTEM_NAME}")
include_directories(${CMAKE_SOURCE_DIR}/External/Vulkan/include)
include_directories(${CMAKE_SOURCE_DIR}/External/Glfw/include)
include_directories(${CMAKE_SOURCE_DIR}/External/glm)

AUX_SOURCE_DIRECTORY(. SRC_LIST)
FILE (GLOB SOURCE_LIST "./Source/*.cpp" "./Source/*.h")
foreach(target ${SOURCE_LIST})
	list(APPEND SRC_LIST ${target})
endforeach()
list(APPEND SRC_LIST ${CMAKE_SOURCE_DIR}/AssetImporter/ImportAsset.h)
list(APPEND SRC_LIST ${CMAKE_SOURCE_DIR}/AssetImporter/ImportSceneData.h)
ADD_EXECUTABLE(hello ${SRC_LIST})

if (UNIX AND NOT APPLE)
    MESSAGE(STATUS "unix")
elseif (WIN32)
    link_directories(${CMAKE_SOURCE_DIR}/External/Vulkan/lib/win)
    link_directories(${CMAKE_SOURCE_DIR}/External/Glfw/lib/win)
    target_link_libraries(hello ${CMAKE_SOURCE_DIR}/External/Vulkan/lib/win/vulkan-1.lib)
    target_link_libraries(hello ${CMAKE_SOURCE_DIR}/External/Glfw/lib/win/glfw3.lib)
elseif (APPLE)
    link_directories(${CMAKE_SOURCE_DIR}/External/Vulkan/lib/macos)
    link_directories(${CMAKE_SOURCE_DIR}/External/Glfw/lib/macos)
    TARGET_LINK_LIBRARIES(hello ${CMAKE_SOURCE_DIR}/External/Glfw/lib/macos/libvulkan.1.dylib)
    TARGET_LINK_LIBRARIES(hello ${CMAKE_SOURCE_DIR}/External/Glfw/lib/macos/libvulkan.1.1.108.dylib)
    TARGET_LINK_LIBRARIES(hello ${CMAKE_SOURCE_DIR}/External/Glfw/lib/macos/libglfw.3.dylib)
    MESSAGE(STATUS "mac os")
else ()
    MESSAGE(STATUS "other platform")
endif ()

